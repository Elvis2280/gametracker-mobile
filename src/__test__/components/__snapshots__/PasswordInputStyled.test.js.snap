// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordInputStyled renders correctly 1`] = `
<View
  style={
    {
      "position": "relative",
    }
  }
>
  <TextInput
    focusable={true}
    onChangeText={[Function]}
    outlineWidth={0}
    placeholder="Password"
    placeholderTextColor="hsl(206, 100%, 50.0%)"
    secureTextEntry={true}
    style={
      {
        "backgroundColor": "hsl(214, 59.4%, 15.3%)",
        "borderBottomColor": "hsl(206, 100%, 50.0%)",
        "borderBottomLeftRadius": 9,
        "borderBottomRightRadius": 9,
        "borderBottomWidth": 1,
        "borderLeftColor": "hsl(206, 100%, 50.0%)",
        "borderLeftWidth": 1,
        "borderRightColor": "hsl(206, 100%, 50.0%)",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "hsl(206, 100%, 50.0%)",
        "borderTopLeftRadius": 9,
        "borderTopRightRadius": 9,
        "borderTopWidth": 1,
        "color": "hsl(206, 98.0%, 95.8%)",
        "fontFamily": "Inter",
        "fontSize": 14,
        "height": 44,
        "letterSpacing": 0,
        "minWidth": 0,
        "paddingLeft": 16,
        "paddingRight": 16,
      }
    }
    testID="password-input"
  />
  <View
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "justifyContent": "center",
        "position": "absolute",
        "right": 10,
        "top": 7,
        "width": 44,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="password-input-toggle"
    >
      <Text />
    </View>
  </View>
</View>
`;

exports[`PasswordInputStyled renders correctly with props 1`] = `
<View
  style={
    {
      "position": "relative",
    }
  }
>
  <TextInput
    focusable={true}
    onChangeText={[Function]}
    outlineWidth={0}
    placeholder="Password"
    placeholderTextColor="hsl(206, 100%, 50.0%)"
    secureTextEntry={true}
    style={
      {
        "backgroundColor": "hsl(214, 59.4%, 15.3%)",
        "borderBottomColor": "hsl(206, 100%, 50.0%)",
        "borderBottomLeftRadius": 9,
        "borderBottomRightRadius": 9,
        "borderBottomWidth": 1,
        "borderLeftColor": "hsl(206, 100%, 50.0%)",
        "borderLeftWidth": 1,
        "borderRightColor": "hsl(206, 100%, 50.0%)",
        "borderRightWidth": 1,
        "borderStyle": "solid",
        "borderTopColor": "hsl(206, 100%, 50.0%)",
        "borderTopLeftRadius": 9,
        "borderTopRightRadius": 9,
        "borderTopWidth": 1,
        "color": "hsl(206, 98.0%, 95.8%)",
        "fontFamily": "Inter",
        "fontSize": 14,
        "height": 44,
        "letterSpacing": 0,
        "minWidth": 0,
        "paddingLeft": 16,
        "paddingRight": 16,
      }
    }
    testID="password-input"
    value="test"
  />
  <View
    style={
      {
        "alignItems": "center",
        "display": "flex",
        "justifyContent": "center",
        "position": "absolute",
        "right": 10,
        "top": 7,
        "width": 44,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="password-input-toggle"
    >
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": "lightgrey",
              "fontSize": 28,
            },
            undefined,
            {
              "fontFamily": "ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        ïŠ´
      </Text>
    </View>
  </View>
</View>
`;
